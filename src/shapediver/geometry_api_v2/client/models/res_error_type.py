# coding: utf-8

"""
    Geometry Backend API v2

    The ShapeDiver Geometry Backend system is used to: * host Grasshopper models in a secure, reliable, scalable, and performant way, * run computations of Grasshopper models, * and cache and output the results of computations and exports.

    The version of the OpenAPI document: 2.13.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class ResErrorType(str, Enum):
    """
    Possible error types.
    """

    """
    allowed enum values
    """
    SDASSERTIONERROR = 'SdAssertionError'
    SDCACHEERRORGENERIC = 'SdCacheErrorGeneric'
    SDCONNECTORERROR = 'SdConnectorError'
    SDDATABASEERRORGENERIC = 'SdDatabaseErrorGeneric'
    SDEMAILINGERROR = 'SdEmailingError'
    SDERRORENTITYNOTFOUND = 'SdErrorEntityNotFound'
    SDERRORFORBIDDEN = 'SdErrorForbidden'
    SDERRORGENERICCLIENT = 'SdErrorGenericClient'
    SDERRORGENERICINTERNAL = 'SdErrorGenericInternal'
    SDERRORUNAUTHORIZED = 'SdErrorUnauthorized'
    SDILLEGALARGUMENTERROR = 'SdIllegalArgumentError'
    SDJWTVALIDATIONERROR = 'SdJwtValidationError'
    SDMODELVALIDATIONERROR = 'SdModelValidationError'
    SDNOTACCEPTABLE = 'SdNotAcceptable'
    SDNOTFOUNDERROR = 'SdNotFoundError'
    SDPARAMETERVALIDATIONERROR = 'SdParameterValidationError'
    SDRATELIMITERRORGENERIC = 'SdRateLimitErrorGeneric'
    SDREQUESTTIMEOUT = 'SdRequestTimeout'
    SDREQUESTVALIDATIONERROR = 'SdRequestValidationError'
    SDRESOURCEGONEERROR = 'SdResourceGoneError'
    SDSESSIONGONEERROR = 'SdSessionGoneError'
    SDSESSIONVALIDATIONERROR = 'SdSessionValidationError'
    SDSTORAGEERRORGENERIC = 'SdStorageErrorGeneric'
    SDTEXTUREURLERROR = 'SdTextureUrlError'
    SDTICKETVALIDATIONERROR = 'SdTicketValidationError'
    SDTOKENMISSINGERROR = 'SdTokenMissingError'
    SDTRANSFORMCONTENTARRAYERROR = 'SdTransformContentArrayError'
    SDUNCONFIRMEDMODELERROR = 'SdUnconfirmedModelError'
    EMPTY = ''

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of ResErrorType from a JSON string"""
        return cls(json.loads(json_str))


