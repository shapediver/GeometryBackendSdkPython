# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = geometry_api_v2
description = SDK to communicate with the ShapeDiver Geometry API version 2
author = ShapeDiver
author_email = dev@shapediver.com
license = MIT
license_files = LICENSE
long_description = file: README.rst
long_description_content_type = text/x-rst; charset=UTF-8
url = https://shapediver.com/
keywords = shapediver, gb-api, sdk
project_urls =
    Documentation = https://help.shapediver.com/doc/geometry-backend
    Source = https://github.com/shapediver/GeometryBackendSdkPython
#    Changelog = https://pyscaffold.org/en/latest/changelog.html

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 5 - Production/Stable
    Programming Language :: Python


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Require a min/specific Python version (comma-separated conditions)
python_requires = >=3.9

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
     python_dateutil >= 2.5.3
     setuptools >= 21.0.0
     urllib3 >= 1.25.3, < 2.1.0
     pydantic >= 2
     typing-extensions >= 4.7.1

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install geometry_api_v2[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools
    pytest
    pytest-cov

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = shapediver.geometry_api_v2.module:function
# For example:
# console_scripts =
#     fibonacci = shapediver.geometry_api_v2.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this pytest issue.
addopts =
    --cov shapediver.geometry_api_v2 --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[isort]
profile = black
known_first_party = shapediver
src_paths = src, tests

[pyright]
venv = .venv
venvPath = .

[flake8]
# Some sane defaults for the code style checker flake8
max-line-length = 99
extend_ignore = E203, E501, E701, F401
# ^  Black-compatible: E203 and W503 have edge cases handled by black
#    F401 ignores unused imports
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.5
package = geometry_api_v2
extensions =
    namespace
    pre_commit
namespace = shapediver
